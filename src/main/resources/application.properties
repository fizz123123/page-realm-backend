spring.application.name=shopping

server.port=8080

# MySQL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:8889/test2?useSSL=false&serverTimezone=Asia/Taipei&useUnicode=true
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# JPA
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update

# Redis
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=

# ecpay
ecpay.merchant-id=${ECPAY_MERCHANT_ID}
ecpay.hash-key=${ECPAY_HASH_KEY}
ecpay.hash-iv=${ECPAY_HASH_IV}
ecpay.cashier-url=https://payment-stage.ecpay.com.tw/Cashier/AioCheckOut/V5
ecpay.return-url=https://41a10c11ef6e.ngrok-free.app/api/checkout/notify
ecpay.client-back-url=http://localhost:3000/purchase-success


logging.level.org.springframework.security=debug
# JWT SecretKey: should be base64 encoded (env variable)
spring.app.jwtSecret=${JWT_SECRET}
# JWT Token expiration time: 2 days (env variable)
spring.app.jwtExpirationMs=172800000

# TOTP Secret Key
spring.app.totp.secret=${TOTP_ENCRYPT_KEY}
spring.app.totp.salt=${TOTP_ENCRYPT_SALT}

# Domain url (env variable)
frontend.url=http://localhost:3000

# JavaMailSender: Gmail (env variable)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${SUPPORT_EMAIL}
spring.mail.password=${APP_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Oauth2 configuration: Google (env variable)
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}

# Oauth2 configuration: github (env variable)
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.scope=read:user,user:email

# AWS
aws.region=ap-northeast-1
aws.s3.buckets.user=pagerealm-user-icon
aws.s3.buckets.books=pagerealm-books
aws.s3.default-avatar-key=avatars/defaults/avatar_default.png

aws.access-key-id=${AWS_ACCESS_KEY_ID}
aws.secret-access-key=${AWS_SECRET_ACCESS_KEY}

# upload file limits
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

# import .env file
spring.config.import=optional:file:.env[.properties]


